name: Windows_msi

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        shell: bash  # 统一使用bash避免shell切换导致的环境问题

    steps:
      - name: 检出项目
        uses: actions/checkout@v4

      - name: 下载SDKMAN和JDK（与macos保持一致）
        run: |
          # 安装SDKMAN（Windows bash兼容）
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          echo "SDKMAN_DIR=$HOME/.sdkman" >> $GITHUB_ENV
          echo "$HOME/.sdkman/bin" >> $GITHUB_PATH
          
          # 安装与macos相同版本的JDK（确保环境一致）
          sdk install java 25.ea.36-open
          sdk use java 25.ea.36-open
          java -version  # 验证JDK安装

      - name: 处理前置依赖（修复版本和路径问题）
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          
          # 处理base依赖
          git clone --depth 1 --branch v1.0.2 https://github.com/oyzh1994/base.git
          cd base || { echo "base目录不存在"; exit 1; }
          mvn clean install -DskipTests || { echo "base安装失败"; exit 1; }
          cd ..
          rm -rf base
          
          # 处理fx-base依赖（确保与父项目版本匹配）
          git clone --depth 1 --branch v1.3.5 https://github.com/oyzh1994/fx-base.git
          cd fx-base || { echo "fx-base目录不存在"; exit 1; }
          mvn clean install -DskipTests || { echo "fx-base安装失败"; exit 1; }
          cd ..
          rm -rf fx-base

      - name: 打包项目Jar
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn -X clean package -DskipTests  # 保留-X参数便于调试

      - name: 执行jlink生成运行时
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          jlink \
          --verbose \
          --vm=server \
          --compress=2 \
          --strip-debug \
          --no-man-pages \
          --no-header-files \
          --output runtime_jre \
          --strip-java-debug-attributes \
          --exclude-files=**.md,**LICENSE,**COPYRIGHT,**classlist,**README.txt,**sound.properties,**ASSEMBLY_EXCEPTION,**ADDITIONAL_LICENSE_INFO \
          --add-modules java.xml,java.rmi,java.sql,java.base,java.naming,java.logging,java.desktop,java.scripting,java.management,java.datatransfer,java.security.jgss,jdk.unsupported,jdk.jdi,java.transaction.xa,java.instrument,jdk.net,java.compiler,jdk.attach

      - name: 打包MSI安装包
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          
          # 查找Jar文件（使用bash语法保持一致）
          JAR_FILE=$(find target -name "*.jar" -print -quit)
          if [ -z "$JAR_FILE" ]; then
              echo "Error: 未找到主Jar文件"
              exit 1
          fi
          
          # 创建应用目录
          mkdir -p target/app
          mv "$JAR_FILE" target/app
          JAR_NAME=$(basename "$JAR_FILE")
          
          # 获取Maven项目信息
          APP_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
          APP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          APP_DESCRIPTION=$(mvn help:evaluate -Dexpression=project.description -q -DforceStdout)
          
          echo "JAR文件: $JAR_NAME"
          echo "应用名称: $APP_NAME"
          echo "版本: $APP_VERSION"
          
          # 执行jpackage生成MSI
          jpackage \
            --verbose \
            --type msi \
            --dest dist \
            --vendor "oyzh" \
            --input target/app \
            --name "$APP_NAME" \
            --main-jar "$JAR_NAME" \
            --app-version "$APP_VERSION" \
            --description "$APP_DESCRIPTION" \
            --icon resource/app.ico \
            --runtime-image runtime_jre \
            --java-options -Xmx2G \
            --java-options -Xms32m \
            --java-options -Xshare:off \
            --java-options -XX:+UseZGC \
            --java-options -XX:+UseCompactObjectHeaders \
            --win-menu \
            --win-shortcut \
            --win-dir-chooser \

      - name: 显示项目结构
        run: |
          choco install -y tree
          echo "--- 项目目录结构 ---"
          tree -L 3

      - name: 列举生成的构建物
        run: ls -lh dist

      - name: 上传构建物
        uses: actions/upload-artifact@v4
        with:
          name: easyshell-msi
          path: dist/*.msi